[package]
name = "geometric-langlands"
version = "0.1.0"
edition = "2021"
authors = ["ruv-FANN Contributors"]
description = "Implementation of the Geometric Langlands Conjecture using Rust, WASM, and CUDA"
license = "MIT"
repository = "https://github.com/ruvnet/ruv-FANN"
keywords = ["mathematics", "langlands", "automorphic", "galois", "wasm", "cuda"]
categories = ["mathematics", "science", "wasm", "algorithms"]

[dependencies]
# Core mathematical libraries
nalgebra = { version = "0.33", features = ["serde-serialize"] }
ndarray = { version = "0.16", features = ["rayon", "serde"] }
num-complex = "0.4"
num-traits = "0.2"
num-bigint = "0.4"
alga = "0.9"
approx = "0.5"

# Linear algebra and tensor operations
# faer = "0.19"  # TODO: Add when available
# candle-core = { version = "0.8", features = ["cuda"] }  # TODO: Add when available
# candle-nn = "0.8"  # TODO: Add when available
# candle-transformers = "0.8"  # TODO: Add when available

# Category theory and abstract algebra
petgraph = "0.6"
fixedbitset = "0.5"

# Parallel computation
rayon = { version = "1.10", optional = true }
crossbeam = "0.8"
tokio = { version = "1.42", features = ["full"] }

# GPU/CUDA support (optional - will be added by Duke Performance Engineer)
# cust = { version = "0.3", optional = true }
# cuda_std = { version = "0.2", optional = true }
# cudarc = { version = "0.12", features = ["f16", "nccl", "curand", "cublas"], optional = true }

# WASM support
wasm-bindgen = { version = "0.2", optional = true }
web-sys = { version = "0.3", optional = true }
js-sys = { version = "0.3", optional = true }
getrandom = { version = "0.2", features = ["js"], optional = true }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Logging and debugging
log = "0.4"
env_logger = "0.11"
tracing = "0.1"
tracing-subscriber = "0.3"

# Testing and benchmarking
proptest = "1.6"
criterion = { version = "0.6", features = ["html_reports"] }
test-case = "3.3"

# Documentation
aquamarine = "0.6"

[dev-dependencies]
pretty_assertions = "1.4"
test-log = "0.2"
rstest = "0.24"

[build-dependencies]
cc = "1.2"
# cuda-builder = "0.3"  # TODO: Add when implementing CUDA kernels

[features]
default = ["parallel"]
parallel = ["dep:rayon", "ndarray/rayon"]
cuda = []  # Feature flag for conditional compilation
bench = []  # Feature flag for benchmarking code
wasm = ["dep:wasm-bindgen", "dep:web-sys", "dep:js-sys", "dep:getrandom"]
full = ["parallel", "wasm"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.bench]
inherits = "release"
debug = true

[workspace]
members = [".", "examples/*"]

[[bench]]
name = "langlands_benchmarks"
harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]