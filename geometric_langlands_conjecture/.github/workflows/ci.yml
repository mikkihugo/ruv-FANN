name: CI

on:
  push:
    branches: [ main, geometric-langlands-conjecture ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run tests with all features
      run: cargo test --all-features --verbose

  cuda-test:
    name: CUDA Test
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:12.0-devel-ubuntu22.04
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      run: |
        apt-get update
        apt-get install -y curl
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    - name: Build with CUDA
      run: cargo build --features cuda --verbose

  wasm-test:
    name: WASM Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    - name: Build WASM
      run: wasm-pack build --features wasm

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Run clippy
      run: cargo clippy -- -D warnings

  bench:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: boa-dev/criterion-compare-action@v3
      with:
        cwd: ./geometric_langlands_conjecture