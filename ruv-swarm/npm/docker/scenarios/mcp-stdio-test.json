{
  "name": "mcp-stdio-validation",
  "description": "Test MCP stdio mode fixes for issue #65",
  "steps": [
    {
      "action": "connect",
      "description": "Establish stdio connection"
    },
    {
      "action": "initialize",
      "description": "Initialize MCP protocol"
    },
    {
      "action": "call-tool",
      "tool": "swarm_init",
      "params": {
        "topology": "mesh",
        "maxAgents": 4
      },
      "description": "Initialize a test swarm"
    },
    {
      "action": "call-tool", 
      "tool": "agent_spawn",
      "params": {
        "type": "researcher",
        "name": "Test Researcher"
      },
      "description": "Spawn a test agent"
    },
    {
      "action": "call-tool",
      "tool": "memory_usage",
      "params": {
        "action": "store",
        "key": "test-stdio-memory",
        "value": {
          "test": true,
          "timestamp": "{{timestamp}}",
          "data": "Testing memory persistence in stdio mode"
        }
      },
      "description": "Test memory persistence"
    },
    {
      "action": "call-tool",
      "tool": "memory_usage", 
      "params": {
        "action": "retrieve",
        "key": "test-stdio-memory"
      },
      "description": "Verify memory retrieval"
    },
    {
      "action": "call-tool",
      "tool": "neural_status",
      "params": {},
      "description": "Check neural network status"
    },
    {
      "action": "call-tool",
      "tool": "swarm_status",
      "params": {},
      "description": "Get swarm status"
    },
    {
      "action": "verify-database",
      "tables": ["swarms", "agents", "memory"],
      "description": "Verify data persisted to database"
    },
    {
      "action": "disconnect",
      "description": "Clean disconnect"
    }
  ],
  "validation": {
    "checkStdoutClean": true,
    "checkStderrLogs": true,
    "checkDatabasePersistence": true,
    "checkErrorHandling": true
  }
}