{
  "name": "network-chaos",
  "description": "Test MCP behavior under various network conditions",
  "steps": [
    {
      "action": "connect",
      "description": "Establish connection"
    },
    {
      "action": "initialize"
    },
    {
      "action": "call-tool",
      "tool": "swarm_init",
      "params": {
        "topology": "star",
        "maxAgents": 10
      }
    },
    {
      "action": "call-tool",
      "tool": "memory_usage",
      "params": {
        "action": "store",
        "key": "chaos/initial-state",
        "value": {
          "test": "network-chaos",
          "phase": "before"
        }
      }
    },
    {
      "action": "repeat",
      "count": 5,
      "interval": 30000,
      "description": "Test under different network conditions",
      "steps": [
        {
          "action": "call-tool",
          "tool": "agent_spawn",
          "params": {
            "type": "coder"
          }
        },
        {
          "action": "wait",
          "duration": 10000,
          "description": "Wait for network chaos to be applied"
        },
        {
          "action": "call-tool",
          "tool": "task_orchestrate",
          "params": {
            "task": "network-test-{{iteration}}",
            "strategy": "adaptive"
          }
        },
        {
          "action": "call-tool",
          "tool": "swarm_monitor",
          "params": {
            "duration": 10,
            "interval": 1
          }
        },
        {
          "action": "verify-state"
        }
      ]
    },
    {
      "action": "call-tool",
      "tool": "memory_usage",
      "params": {
        "action": "retrieve",
        "key": "chaos/initial-state"
      },
      "description": "Verify data persistence through chaos"
    },
    {
      "action": "disconnect"
    }
  ]
}