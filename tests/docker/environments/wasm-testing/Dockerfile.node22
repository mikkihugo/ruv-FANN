# Test with Node.js 22 (Current)
FROM node:22-alpine

RUN apk add --no-cache bash

WORKDIR /app

# Create package.json
RUN cat > package.json <<'EOF'
{
  "name": "ruv-swarm-node22-test",
  "version": "1.0.0",
  "type": "module"
}
EOF

# Install ruv-swarm
RUN npm install ruv-swarm@latest

# Create compatibility test
RUN cat > test-node22.mjs <<'EOF'
import pkg from 'ruv-swarm';
const { RuvSwarm } = pkg;
import { WasmModuleLoader } from 'ruv-swarm/src/wasm-loader.js';

console.log(`Testing ruv-swarm on Node.js ${process.version}`);

try {
  // Test basic functionality
  const swarm = new RuvSwarm();
  console.log('✅ RuvSwarm instance created');
  
  // Test WASM loading with new Node features
  const loader = new WasmModuleLoader();
  await loader.initialize('progressive');
  const status = loader.getModuleStatus();
  
  if (status.core && !status.core.placeholder) {
    console.log('✅ WASM loaded successfully');
    
    // Test memory usage
    const memory = loader.getTotalMemoryUsage();
    console.log(`Memory usage: ${memory} bytes`);
    
    if (memory > 0) {
      console.log('✅ WASM memory allocation confirmed');
    }
  } else {
    console.log('❌ WASM using placeholder');
    process.exit(1);
  }
  
  console.log(`\n✅ Node.js ${process.version} compatibility: PASSED`);
} catch (error) {
  console.error(`❌ Node.js ${process.version} compatibility: FAILED`);
  console.error(error);
  process.exit(1);
}
EOF

CMD ["node", "test-node22.mjs"]